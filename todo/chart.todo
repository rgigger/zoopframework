-	backends
	-	flash
		-	open flash charts (http://teethgrinder.co.uk/open-flash-chart-2/) (LGPL)
	-	service
		-	google charts (http://code.google.com/apis/chart/) (web service)
	-	php server side
		-	GraPHPite (http://graphpite.sourceforge.net/) (LGPL) now http://pear.php.net/package/Image_Graph
		-	http://www.phpclasses.org/browse/package/2613.html (LGPL)
		-	plchart (http://www.plchart.net/index.php/Main_Page) (LGPL)
		-	advgraph (http://code.google.com/p/advgraph/) (BSD)
	-	client side (html, css, js)
		-	dojox charts (http://www.dojotoolkit.org/projects/dojox)
		-	plotkit (http://www.liquidx.net/plotkit/)
		-	WebFX chart (http://webfx.eae.net/dhtml/chart/chart.html)
		-	jQuery visualizer (http://www.filamentgroup.com/lab/jquery_visualize_plugin_accessible_charts_graphs_from_tables_html5_canvas/)
		-	Raphael (http://raphaeljs.com/)
	-	GPL
		-	pChart (http://pchart.sourceforge.net/) (GPL)
		-	libchart (http://naku.dohcrew.com/libchart/pages/introduction/)
	-	collections
		-	maybe grab some stuff from here (http://www.hotscripts.com/PHP/Scripts_and_Programs/Graphs_and_Charts/index.html)
		-	this place (http://www.developertutorials.com/scripts/3/72/)
		-	and this place too (http://www.roscripts.com/CSS_PHP_flash_and_AJAX_charts-128.html)
	-	home brewed with zoop graphics module
		-	with html/css
		-	with a graphic plugin with it's own xml tags and php code
	-	exotic
		-	gantt charts with (http://ganttproject.biz/license.php)
		-	those timeline charts that scott showed me
	-	pdf, both as pdfs and in the browser (http://ajaxian.com/archives/wps-postscript-and-pdf-interpreter-for-html-5-canvas)
-	steps
	-	define a standard api for defining a chart
		-	look to google charts, open flash charts, and dojox.charts for examples of how to define the data
	-	include each package that you want to use
	-	write the wrapper that implements the api
	-	write some glue and plugins for embedding the client side charts
-	try to come up with an API to abstract the drawing
	-	define basic drawing operations
	-	define a data format in php that can be converted directly to ajax that defines a series of drawing operations
	-	define an API of standard drawing operations
	-	make the API write to different targets: PDF, GDLib, our data format, etc
	-	try to get all the libs that do the drawing in PHP to use this API so you can write to any of the backends
-	this is very cool
	-	http://excanvas.sourceforge.net/
-	front ends
	-	html/css/javascript
		-	visual chart
		-	image maps for image charts
	-	images
	-	swf
	-	pdf
	-	svg
	-	fop
-	implementation
	-	use all the other libs you can, come up with a unified api
	-	wrap all of them
	-	create gui plugins for adding them to html
	-	create an xml parser for specifying the data as xml and displaying as a chart
	-	create gui plugins for handling the xml data
	-	allow the gui plugins and xml data to be used to create zoop graphics documents
-	basic usage patterns
	-	web api
		-	define the data
		-	create a url/other include markup
		-	include it in html
		-	chart is generated on and loaded from a remote site
	-	all local
		-	one page is same as web api
		-	now page takes the data and generates and serves the chart
	-	inline rendering with native browser features
		-	define the data
		-	create the inline markup
		-	include it in html
		-	issues with needing to insert markup/js code/css into different locations on the page