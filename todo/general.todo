-	roll the 1.51.00 release
	-	stuff we have
		-	major overhaul of configuration system
		-	complete rewrite of DbObject
		-	mysql support
		-	tons more examples
		-	mixins
		-	getters/setters
	-	stuff we need
		-	fix the Object undeclared member variable problem
		-	examples for mixins, getters and setters
		-	examples of DbObject relationship functions
	-	steps
		-	make sure all the examples work
		-	update the api docs
		-	export the code
		-	tar.gz it up
		-	upload it to google code
-	1.52.00 release???
	-	ajax
	-	form handling
	-	ability to use external zoop framework module
	-	somehow make the old graphics module available
-	1.53.00 release???
	-	auth
	-	permissions
	-	krumo replacement
	-	scaffolding
-	1.54.00 release???
	-	cli
	-	migrations
	-	charts
	-	log
-	2.00.00 release
	-	definitely
		-	legacy
		-	contrib
		-	upgrade/transition/bc/compat
		-	port a Zoop 1.5 app to Zoop 2.0 using upgrade
	-	maybe
		-	permissions?
		-	forms?
		-	xml graphics?
		-	migrations?
		-	ajax?
		-	zap/zoop cli app?
		-	scaffolding?
-	important stuff
	-	necessary modules
		-	awesome permissions system
		-	forms
			-	validation
			-	saving
		-	ajax
	-	use exceptions to help people get set up, don't automatically run schema changes
	-	good solution for form validation
		-	check fields on the client
		-	check fields on the server that can't be checked on the client and return results
		-	check fields on the server to see if they've been tampered with and throw and error if there's a problem
		-	hilight fields that need to be fixed and give reasons
		-	assign field names like _autosave[$classname][$id][$fieldname]
		-	store the allowed autosave info in the session under a random token name
		-	store the token in the form
		-	create a Form::autosave function to be called on post
			-	foreach _autosave field
				-	verfify that it's an authorized field
				-	create the object if necessary
				-	save the field to the object
			-	save object that you created
	-	set up config.yaml in all stationary
	-	include examples in stationary and tutorials explaining the following
		-	check out from code.google.com
		-	including modules
		-	register class
		-	setting up the tmp directory, should we have it automatically create sub dirs?
		-	adding new zones, have ZoneDefault plus two other, document how to add new ones
		-	better default main.tpl, fix the float problems
		-	multiple layouts, per app, per zone, per page
		-	non-default pages, set up several pages in multiple zones
		-	db, how it get it set up right away
		-	how to prevent sql injection
		-	how to prevent script injection
		-	session
		-	dbobject
-	slightly less important stuff
	-	creating new projects automatically
		-	command line tool
	-	creating zones automatically
		-	command line tool to do it
		-	auto configure the includes
	-	migrations
		-	create them automatically
		-	apply all migrations
		-	apply single migration
		-	apply latest migratin
		-	re-apply single / latest migration
	-	retool zap
		-	"zones" are identified by the object type, allow for aliases
		-	an object type can supply code for a list of verbs
		-	a verb / type can have any number of objects
		-	capture and pass along flag information
